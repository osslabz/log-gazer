name: build-release-on-main-push

on:
  push:
    branches:
      - main

jobs:
  build-release-on-main-push:
    if: ${{ !contains(github.event.head_commit.message, '[release]') }} # prevent recursive releases

    permissions:
      contents: write
      packages: write

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: main

      - name: setup-jdk
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'
          cache: 'maven'

      - name: maven-build-verify
        run: mvn --batch-mode -Posslabz-release -Pnative-jpackage clean release:clean release:prepare release:perform

      - name: configure-git-user
        uses: qoomon/actions--setup-git@v1
        with:
          user: bot

      - name: get-latest-tag
        id: get-latest-tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: create-release-notes
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: ${{ steps.get-latest-tag.outputs.tag }}
          files: target/dist/*

      - name: merge-main-to-dev
        run: |
          git fetch --unshallow
          git checkout dev
          git pull
          git merge --no-ff main -m "[release] auto-merge released main back to dev"
          git push